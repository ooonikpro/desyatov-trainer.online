---
import CardPricing from "./CardPricing.svelte";
import Button from "../button/Button.astro";

interface Props {
  title: string;
  img: string;
  textPrice?: number;
  videoPrice?: number;
  gender?: "m" | "w";
  lite?: boolean;
}

const {
  title,
  img,
  textPrice: _textPrice = 690,
  videoPrice: _videoPrice = 1490,
  gender = "m",
  lite = false,
} = Astro.props;

const textPrice = lite ? Math.round(_textPrice / 2) : _textPrice;
const videoPrice = lite ? Math.round(_videoPrice / 2) : _videoPrice;

const cardPricingId = `card-${+lite}-${title.toLowerCase()}`;
const descriptionTriggerId = `${cardPricingId}-description-${title.toLowerCase()}-trigger`;
const priceTriggerId = `${cardPricingId}-price-${title.toLowerCase()}-trigger`;

const genderModifier = {
  m: "card--for-mans",
  w: "card--for-women",
};
const classes = ["card", genderModifier[gender], lite ? "lite" : ""];
---

<div class:list={classes}>
  <div class="card__cover">
    <img src={img} alt={title} />
  </div>

  <input
    class="card__trigger card__trigger--modal"
    type="checkbox"
    id={descriptionTriggerId}
  />
  <input
    class="card__trigger card__trigger--pricing"
    type="checkbox"
    id={priceTriggerId}
  />

  <div class="card__content card__content--base-info">
    <h3 class="card__title">
      {title}

      {lite ? <span class="card__badge">lite</span> : null}
    </h3>
    <p class="card__description">
      <slot name="description" />
    </p>
    <p class="card__price">
      <span class="card__price-prefix">от&nbsp;</span>
      <b class="card__price-value">{String(textPrice)}&nbsp;₽</b>
      <span class="card__price-prefix">&nbsp;/ мес.</span>
    </p>
    <Button for={priceTriggerId} size="l" color="gradient"> Подключить</Button>

    <label class="link card__details" for={descriptionTriggerId}>
      <span class="card__details-text">Подробнее о программе</span>
      <span class="card__details-close">&times;</span>
    </label>
  </div>

  <div class="card__content card__content--pricing">
    <CardPricing
      id={cardPricingId}
      textPrice={textPrice}
      videoPrice={videoPrice}
      client:visible
    >
      <Button slot="submit-btn" size="l" color="gradient" class="card__payment">
        Перейти к оплате
      </Button>

      <label slot="cancel-btn" class="link card__details" for={priceTriggerId}>
        <span class="card__details-text">Назад</span>
      </label>
    </CardPricing>
  </div>

  <div class="card__modal-outer">
    <div class="card__modal-in">
      <div class="card__content">
        <slot name="long-description" />
      </div>
    </div>
  </div>
</div>

<style lang="scss">
  .card {
    width: 100%;
    min-height: 550px;
    border: 2px solid var(--secondary);
    border-radius: 20px;
    overflow: hidden;
    position: relative;
    z-index: 1;

    @include desktop() {
      max-width: calc(50% - 16px);
    }

    &--for-mans &__cover img {
      filter: sepia(100%) hue-rotate(160deg);
    }

    &--for-women &__cover img {
      filter: sepia(100%) hue-rotate(240deg);
    }

    &--for-mans.lite &__cover img {
      filter: sepia(100%) hue-rotate(50deg);
    }

    &--for-women.lite &__cover img {
      filter: sepia(100%) hue-rotate(320deg);
    }

    &__cover {
      position: absolute;
      inset: 0;
      z-index: -1;

      img {
        opacity: 0.4;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    &__content {
      position: absolute;
      inset: 0;
      display: flex;
      flex-direction: column;
      gap: 16px;
      padding: 80px 24px 40px 24px;
      min-height: 100%;
      transition: all 500ms ease;

      &--pricing {
        opacity: 0;
        visibility: hidden;
      }
    }

    &__title {
      position: relative;
      font-size: 2rem;

      @include desktop() {
        font-size: 2.4rem;
      }

      &--alternative {
        @include fontAlternative();
        margin-top: auto;
        font-size: 1.4rem;

        @include desktop {
          font-size: 1.2rem;
          margin-bottom: 16px;
        }
      }
    }

    &__badge {
      @include bgWithGradient;
      @include fontAlternative;
      top: -4rem;
      right: -2.3rem;
      position: absolute;
      display: inline-block;
      padding: 0.8rem 2rem;
      color: var(--black);
      text-transform: uppercase;
      border-radius: 18px;
      transform: scale(0.5);
      animation: 8s rainbow infinite;
    }

    &__description {
      font-size: 1.2rem;
      opacity: 0.8;
      margin-bottom: 24px;
    }

    &__payment,
    &__price {
      margin-top: auto;
    }

    &__price-prefix {
      font-size: 1.2rem;
      opacity: 0.8;
    }

    &__price-value {
      font-size: 2.4rem;
    }

    &__details {
      text-decoration: none;
    }

    &__details-text {
      display: block;
      text-align: center;
    }

    &__details-close {
      position: absolute;
      visibility: hidden;
      opacity: 0;
      top: 0;
      right: 0;
      width: 50px;
      height: 50px;
      font-size: 5rem;
      line-height: 50px;
      text-align: center;
      transform: scale(0.5);
      z-index: 2;
      transition: all 300ms ease;

      @include desktop {
        cursor: pointer;
      }
    }

    &__trigger {
      display: none;
      opacity: 0;
      visibility: hidden;
    }

    &__modal-outer {
      position: absolute;
      inset: 0;
      background-color: var(--black-secondary);
      border-radius: inherit;
      transform: translateY(100%);
      transition: all 250ms ease;
      visibility: hidden;
      overflow: hidden;
      z-index: 1;
    }

    &__modal-in {
      width: calc(100% + 17px);
      height: 100%;
      overflow-y: scroll;

      p {
        font-size: 1.2rem;
      }
    }

    &__trigger--pricing:checked ~ &__content--base-info {
      opacity: 0;
      visibility: hidden;
    }

    &__trigger--pricing:checked ~ &__content--pricing {
      opacity: 1;
      visibility: visible;
    }

    &__trigger--modal:checked ~ &__content &__details &__details-close {
      visibility: visible;
      opacity: 1;
    }

    &__trigger--modal:checked ~ &__modal-outer {
      visibility: visible;
      transform: translateY(0);
    }
  }
</style>
